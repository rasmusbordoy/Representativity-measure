df[which(df$Male == 1 & df$Urban == 1),1] <-        rbinom(length(which(df$Male == 1 & df$Urban == 1)),1,0.5)
df[which(df$Female == 1 & df$Rural == 1),1] <-      rbinom(length(which(df$Female == 1 & df$Rural == 1)),1,0.5)
df[which(df$Female == 1 & df$Suburban == 1),1] <-   rbinom(length(which(df$Female == 1 & df$Suburban == 1)),1,0.5)
df[which(df$Female == 1 & df$Urban == 1),1] <-      rbinom(length(which(df$Female == 1 & df$Urban == 1)),1,0.5)
library(plyr)
test_df <- matrix(c(ddply(df,.(Male,Female,Rural,Suburban,Urban),summarize,sum(Response))[,6],
ddply(df,.(Male,Female,Rural,Suburban,Urban),summarize,length(Response)-sum(Response))[,6]),ncol=6,byrow=TRUE)
chisq.test(test_df)
library(readxl)
library(plyr)
library(tidyverse)
data <- read_excel(path="C:/Users/Rbordoy/Hjerteforeningen/Analyseenhed - Dokumenter/2_Igangsatte projekter/Evalueringer/Hjertemotion/Metode til stikprøve/Data på lokalforeninger.xlsx",sheet="Ark1")
length(unique(data$Kommune))
data <- read_excel(path="C:/Users/Rbordoy/Hjerteforeningen/Analyseenhed - Dokumenter/2_Igangsatte projekter/Evalueringer/Hjertemotion/Metode til stikprøve/Data/Data på lokalforeninger.xlsx",sheet="Ark1")
length(unique(data$Kommune))
nrow(subset(data,antal_hold==0))
data <- subset(data,antal_hold>0)
data <- subset(data,frivillig_tovholder*udd_instruktør*soc_samvær  >0)
dim(data[which(data$antal_hold>1 & data$`Kommunalt samarbejde`==1),])
dim(data[which(data$antal_hold>1 & data$`Kommunalt samarbejde`<1),])
dim(data[which(data$antal_hold==1 & data$`Kommunalt samarbejde`==1),])
dim(data[which(data$antal_hold==1 & data$`Kommunalt samarbejde`<1),])
data <- left_join(data,ddply(data,.(Kommune),summarize,Kommunalt_samarbejde_generelt = prod(`Kommunalt samarbejde`)))
data <- left_join(data,ddply(data,.(Kommune),summarize, sum_antal_hold = sum(antal_hold)))
data$Group <- NA
data[which(data$sum_antal_hold>1 & data$Kommunalt_samarbejde_generelt==1),"Group"] <- "G1"
data[which(data$sum_antal_hold==1 & data$Kommunalt_samarbejde_generelt==1),"Group"] <- "G2"
data[which(data$Kommunalt_samarbejde_generelt<1),"Group"] <- "G3"
data <- distinct(data[,c("Kommune","antal_indbyggere","Group")])
data <- left_join(data,ddply(data,.(Group),summarize,samp.size=round(20*length(Kommune)/nrow(data),0)))
data <- data.frame(data)
data$Kommune[data$Kommune %in% c("Nordfyn","Vesthimmerland")] <- c("Nordfyns","Vesthimmerlands")
data$Sample <- 0
data[which(data$Kommune %in% sample(data[which(data$Group == "G3" & data$Sample == 0),"Kommune"],
size=unique(data[which(data$Group == "G3" & data$Sample == 0),"samp.size"]))),"Sample"] <- 1
data[which(data$Kommune %in% sample(data[which(data$Group == "G2" & data$Sample == 0),"Kommune"],
size=unique(data[which(data$Group == "G2" & data$Sample == 0),"samp.size"]))),"Sample"] <- 1
data[which(data$Kommune %in% sample(data[which(data$Group == "G1" & data$Sample == 0),"Kommune"],
size=unique(data[which(data$Group == "G1" & data$Sample == 0),"samp.size"]))),"Sample"] <- 1
unique(data[which(data$Sample == 1),"Kommune"])
data
7+2+11
data <- read_excel(path="C:/Users/Rbordoy/Hjerteforeningen/Analyseenhed - Dokumenter/2_Igangsatte projekter/Evalueringer/Hjertemotion/Metode til stikprøve/Data/Data på lokalforeninger.xlsx",sheet="Ark1")
length(unique(data$Kommune))
nrow(subset(data,antal_hold==0))
data <- subset(data,antal_hold>0)
nrow(subset(data,frivillig_tovholder*udd_instruktør*soc_samvær ==0))
data <- subset(data,frivillig_tovholder*udd_instruktør*soc_samvær  >0)
dim(data[which(data$antal_hold>1 & data$`Kommunalt samarbejde`==1),])
dim(data[which(data$antal_hold>1 & data$`Kommunalt samarbejde`<1),])
dim(data[which(data$antal_hold==1 & data$`Kommunalt samarbejde`==1),])
dim(data[which(data$antal_hold==1 & data$`Kommunalt samarbejde`<1),])
data <- left_join(data,ddply(data,.(Kommune),summarize,Kommunalt_samarbejde_generelt = prod(`Kommunalt samarbejde`)))
data <- left_join(data,ddply(data,.(Kommune),summarize, sum_antal_hold = sum(antal_hold)))
data
data$Group <- NA
data[which(data$sum_antal_hold>1 & data$Kommunalt_samarbejde_generelt==1),"Group"] <- "G1"
data[which(data$sum_antal_hold==1 & data$Kommunalt_samarbejde_generelt==1),"Group"] <- "G2"
data[which(data$Kommunalt_samarbejde_generelt<1),"Group"] <- "G3"
data <- distinct(data[,c("Kommune","antal_indbyggere","Group")])
data <- left_join(data,ddply(data,.(Group),summarize,samp.size=round(20*length(Kommune)/nrow(data),0)))
data <- data.frame(data)
data$Kommune[data$Kommune %in% c("Nordfyn","Vesthimmerland")] <- c("Nordfyns","Vesthimmerlands")
data
data[which(data$Kommune %in% sample(data[which(data$Group == "G3" & data$Sample == 0),"Kommune"],
size=unique(data[which(data$Group == "G3" & data$Sample == 0),"samp.size"]))),"Sample"] <- 1
data$Sample <- 0
data[which(data$Kommune %in% sample(data[which(data$Group == "G3" & data$Sample == 0),"Kommune"],
size=unique(data[which(data$Group == "G3" & data$Sample == 0),"samp.size"]))),"Sample"] <- 1
data[which(data$Kommune %in% sample(data[which(data$Group == "G2" & data$Sample == 0),"Kommune"],
size=unique(data[which(data$Group == "G2" & data$Sample == 0),"samp.size"]))),"Sample"] <- 1
data[which(data$Kommune %in% sample(data[which(data$Group == "G1" & data$Sample == 0),"Kommune"],
size=unique(data[which(data$Group == "G1" & data$Sample == 0),"samp.size"]))),"Sample"] <- 1
unique(data[which(data$Sample == 1),"Kommune"])
data <- read_excel(path="C:/Users/Rbordoy/Hjerteforeningen/Analyseenhed - Dokumenter/2_Igangsatte projekter/Evalueringer/Hjertemotion/Metode til stikprøve/Data/Data på lokalforeninger.xlsx",sheet="Ark1")
data
data <- subset(data,antal_hold>0)
nrow(subset(data,frivillig_tovholder*udd_instruktør*soc_samvær ==0))
data <- subset(data,frivillig_tovholder*udd_instruktør*soc_samvær  >0)
df <- data.frame(matrix(0,nrow=500,ncol=6))
colnames(df) <- c("Response","Male","Female","Rural","Suburban","Urban")
df[,2] <- rbinom(500,1,0.5) #Male
df[,3] <- ifelse(df[,2] == 0,1,0) #Female
df[,4] <- rbinom(500,1,0.2) #rural
df[which(df[,4]==0),5] <- rbinom(length(which(df[,4]==0)),1,0.2) #suburban
df[which(df[,4]==0 & df[,5]==0),6] <- 1
df
test_df <- matrix(c(ddply(df,.(Male,Female,Rural,Suburban,Urban),summarize,sum(Response))[,6],
ddply(df,.(Male,Female,Rural,Suburban,Urban),summarize,length(Response)-sum(Response))[,6]),ncol=6,byrow=TRUE)
library(plyr)
test_df <- matrix(c(ddply(df,.(Male,Female,Rural,Suburban,Urban),summarize,sum(Response))[,6],
ddply(df,.(Male,Female,Rural,Suburban,Urban),summarize,length(Response)-sum(Response))[,6]),ncol=6,byrow=TRUE)
chisq.test(test_df)
##########
library(data.table)
n <- 1000
df <- data.frame(matrix(0,nrow=n,ncol=4))
setDT(df)
#Assign half of the records as male and female
df[,2] <- ifelse(rbinom(n,1,0.5) == 1, "Male","Female")
#Assign 20 percent of the records as living in the rural area, 40 percent in suburban and 40 in urban
df[,3] <- ifelse(rbinom(n,1,0.2)==1,"Rural",ifelse(rbinom(n,1,0.5),"Suburban","Urban"))
#Assign ages randomly from a uniform distribution
df[,4] <- round(runif(n,min=35,max=82),0)
colnames(df) <- c("Response","Sex","Area","Age")
unlist(df[,.N,by=Sex][,1])
p1 <- (unlist(df[,.N,by=Sex][,2]))/n
names(p1) <- unlist(df[,.N,by=Sex][,1])
barplot(p1,main="Distribution of sex")
p2 <- (unlist(df[,.N,by=Area][,2]))/n
names(p2) <- unlist(df[,.N,by=Area][,1])
barplot(p2,main="Distribution of area")
par(mfrow=c(1,3))
barplot(p1,main="Distribution of sex")
barplot(p2,main="Distribution of area")
hist(unlist(df[,"Age"]),main="Distribution of age",prob=TRUE,xlab="Age")
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.5)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.8)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.6)
sex_rep <- 1+sum(apply(df[,mean(Response),by=Sex],1,function(x){ifelse(as.numeric(x[2])<df[,mean(Response)],as.numeric(x[2])-df[,mean(Response)],0)}))/df[,mean(Response)]
area_rep <- 1+sum(apply(df[,mean(Response),by=Area],1,function(x){ifelse(as.numeric(x[2])<df[,mean(Response)],as.numeric(x[2])-df[,mean(Response)],0)}))/df[,mean(Response)]
p_age <- Vectorize(function(a){
sum(df[Age==a,Response])/nrow(df[Age==a])
})
age_rep <- 1+sum(ifelse(p_age(sort(unlist(unique(df[,"Age"]))))<df[,mean(Response)],p_age(sort(unlist(unique(df[,"Age"]))))-df[,mean(Response)],0))/(df[,mean(Response)]*(max(unlist(unique(df[,"Age"])))-min(unlist(unique(df[,"Age"])))))
list("Representativity Sex"=round(sex_rep,4),
"Representativity Area" = round(area_rep,4),
"Representativity Age"=round(age_rep,4))
unlist(df[,.N,by=Sex][,1])
p1 <- (unlist(df[,.N,by=Sex][,2]))/n
names(p1) <- unlist(df[,.N,by=Sex][,1])
barplot(p1,main="Distribution of sex")
obs_age <- seq(from=40,to=81,by=1)
pot_age <- seq(from=35,to=120,by=1)
overall_rate <- 0.55
age_specific_rate <- -sin(obs_age/45)+1.4
plot(x=pot_age,y=rep(overall_rate,length(pot_age)),type="l",ylim=c(0,1),xlim=c(min(pot_age),max(pot_age)+15),xlab="Age",ylab="Response rate",main="Response rates within age")
plot(x=pot_age,y=rep(overall_rate,length(pot_age)),type="l",ylim=c(0,1),xlim=c(min(pot_age),max(pot_age)+15),xlab="Age",ylab="Response rate")+text(128,0.57,"Overall rate")
lines(y=age_specific_rate,x=obs_age,col=9,lwd=2)
lines(y=rep(age_specific_rate[length(obs_age)],10),x=seq(from=max(obs_age)+1,to=max(obs_age)+5,length=10))
text(y=age_specific_rate[length(obs_age)],x=102,"Age specific rate")
lines(x=rep(40,10),y=seq(from=0,to=0.65,length=10),col=2)
text(x=min(obs_age)+4,y=0.67,"Min. obs. age")
lines(x=rep(max(obs_age),10),y=seq(from=0,to=0.65,length=10),col=2)
text(x=max(obs_age)+4,y=0.67,"Max. obs. age")
polygon(c(min(obs_age), max(obs_age), max(obs_age),min(obs_age)), c(0, 0,0.55,0.55), col="red")
polygon(c(obs_age, max(obs_age), 40),
c(ifelse(-sin(obs_age/45)+1.4>0.55,0.55,-sin(obs_age/45)+1.4), 0,0 ), col="green")
text(55,0.2,"A",cex=2)
text(70,0.5,"B",cex=2)
lines(y=age_specific_rate,x=obs_age,col=9,lwd=2)
library(plyr)
library(data.table)
n <- 1000
df <- data.frame(matrix(0,nrow=n,ncol=4))
setDT(df)
#Assign half of the records as male and female
df[,2] <- ifelse(rbinom(n,1,0.5) == 1, "Male","Female")
#Assign 20 percent of the records as living in the rural area, 40 percent in suburban and 40 in urban
df[,3] <- ifelse(rbinom(n,1,0.2)==1,"Rural",ifelse(rbinom(n,1,0.5),"Suburban","Urban"))
#Assign ages randomly from a uniform distribution
df[,4] <- round(runif(n,min=35,max=82),0)
colnames(df) <- c("Response","Sex","Area","Age")
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.5)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.8)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.6)
sex_rep <- 1+sum(apply(df[,mean(Response),by=Sex],1,function(x){ifelse(as.numeric(x[2])<df[,mean(Response)],as.numeric(x[2])-df[,mean(Response)],0)}))/df[,mean(Response)]
sex_rep
df
df[,.SD]
df[,.SD]
df
###############################################################################################################
## Assign responses according to a distribution with interacting response probabilities between area and sex ##
###############################################################################################################
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.5)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.8)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.6)
df[,.SD]
df
df[,.SDcols]
df[,.SD[mean]]
df[,lapply(.SD,mean)]
df[,lapply(.SD,mean),by=Sex]
df[,lapply(.SD,mean(Response)),by=Sex]
df[,.S,by=Sex]
df[,.N,by=Sex]
df[,.sum(Response),by=Sex]
df[,sum(Response),by=Sex]
df[,sum(Response)/N,by=Sex]
df[,sum(Response)/.N,by=Sex]
t(df[,sum(Response)/.N,by=Sex])
df[,sum(Response)/.N,by=Sex,V1]
df[,sum(Response)/.N,by=Sex][,2]
unlist(df[,sum(Response)/.N,by=Sex][,2])
diff(unlist(df[,sum(Response)/.N,by=Sex][,2]))
abs(diff(unlist(df[,sum(Response)/.N,by=Sex][,2])))
df
df[,sum(Response)/.N,by=Area]
unlist(df[,sum(Response)/.N,by=Area][,2])
table(unlist(df[,sum(Response)/.N,by=Area][,2]))
expand.grid(unlist(df[,sum(Response)/.N,by=Area][,2]))
unlist(df[,sum(Response)/.N,by=Area][,2])
diff(unlist(df[,sum(Response)/.N,by=Area][,2]))
unlist(df[,sum(Response)/.N,by=Area][1,2])
unlist(df[,sum(Response)/.N,by=Area][1,2])
unlist(df[,sum(Response)/.N,by=Area][2,2])
unlist(df[,sum(Response)/.N,by=Area][3,2])
abs(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][2,2]))+
abs(unlist(df[,sum(Response)/.N,by=Area][2,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))+
abs(unlist(df[,sum(Response)/.N,by=Area][3,2])-unlist(df[,sum(Response)/.N,by=Area][1,2]))
(abs(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][2,2]))+
abs(unlist(df[,sum(Response)/.N,by=Area][2,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))+
abs(unlist(df[,sum(Response)/.N,by=Area][3,2])-unlist(df[,sum(Response)/.N,by=Area][1,2])))
(abs(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][2,2]))+
abs(unlist(df[,sum(Response)/.N,by=Area][2,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))+
abs(unlist(df[,sum(Response)/.N,by=Area][3,2])-unlist(df[,sum(Response)/.N,by=Area][1,2])))/3
abs(diff(unlist(df[,sum(Response)/.N,by=Sex][,2])))/2
df[,sum(Response)/.N,by=Area]
abs(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))
abs(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))/2
abs(diff(unlist(df[,sum(Response)/.N,by=Sex][,2])))/2
abs(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))/2
(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))/2
(unlist(df[,sum(Response)/.N,by=Area][1,2])-unlist(df[,sum(Response)/.N,by=Area][3,2]))
library(plyr)
library(data.table)
n <- 1000
df <- data.frame(matrix(0,nrow=n,ncol=4))
setDT(df)
#Assign half of the records as male and female
df[,2] <- ifelse(rbinom(n,1,0.5) == 1, "Male","Female")
#Assign 20 percent of the records as living in the rural area, 40 percent in suburban and 40 in urban
df[,3] <- ifelse(rbinom(n,1,0.2)==1,"Rural",ifelse(rbinom(n,1,0.5),"Suburban","Urban"))
#Assign ages randomly from a uniform distribution
df[,4] <- round(runif(n,min=35,max=82),0)
colnames(df) <- c("Response","Sex","Area","Age")
p1 <- (unlist(df[,.N,by=Sex][,2]))/n
names(p1) <- unlist(df[,.N,by=Sex][,1])
barplot(p1,main="Distribution of sex")
p2 <- (unlist(df[,.N,by=Area][,2]))/n
names(p2) <- unlist(df[,.N,by=Area][,1])
barplot(p2,main="Distribution of area")
par(mfrow=c(1,3))
barplot(p1,main="Distribution of sex")
barplot(p1,main="Distribution of sex")
p2 <- (unlist(df[,.N,by=Area][,2]))/n
names(p2) <- unlist(df[,.N,by=Area][,1])
barplot(p2,main="Distribution of area")
par(mfrow=c(1,3))
barplot(p1,main="Distribution of sex")
barplot(p2,main="Distribution of area")
hist(unlist(df[,"Age"]),main="Distribution of age",prob=TRUE,xlab="Age")
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.2)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.2)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.2)
library(dplyr)
df
m <- glm(Response~Sex*Area+Age,data=df)
m
predict(m)
cbind(m,p_i = predict(m))
cbind(df,p_i = predict(m))
df <- cbind(df,p_i = predict(m))
1-2*sqrt(sum((df$p_i - mean(df$Response))^2)/n)
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.6)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.6)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.5)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.7)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.75)
m <- glm(Response~Sex*Area+Age,data=df)
df <- cbind(df,p_i = predict(m))
1-2*sqrt(sum((df$p_i - mean(df$Response))^2)/n)
df
n <- 1000
df <- data.frame(matrix(0,nrow=n,ncol=4))
setDT(df)
#Assign half of the records as male and female
df[,2] <- ifelse(rbinom(n,1,0.5) == 1, "Male","Female")
#Assign 20 percent of the records as living in the rural area, 40 percent in suburban and 40 in urban
df[,3] <- ifelse(rbinom(n,1,0.2)==1,"Rural",ifelse(rbinom(n,1,0.5),"Suburban","Urban"))
#Assign ages randomly from a uniform distribution
df[,4] <- round(runif(n,min=35,max=82),0)
colnames(df) <- c("Response","Sex","Area","Age")
p1 <- (unlist(df[,.N,by=Sex][,2]))/n
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.6)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.5)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.7)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.75)
m <- glm(Response~Sex*Area+Age,data=df)
df_p <- cbind(df,p_i = predict(m))
1-2*sqrt(sum((df_p$p_i - mean(df_p$Response))^2)/n)
1-2*sqrt(sum((df_p$p_i - mean(df_p$Response))^2)/n)
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.6)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.5)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.7)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.75)
m <- glm(Response~Sex*Area+Age,data=df)
df_p <- cbind(df,p_i = predict(m))
1-2*sqrt(sum((df_p$p_i - mean(df_p$Response))^2)/n)
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.6)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.5)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.7)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.75)
m <- glm(Response~Sex*Area+Age,data=df)
df_p <- cbind(df,p_i = predict(m))
1-2*sqrt(sum((df_p$p_i - mean(df_p$Response))^2)/n)
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.8)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.75)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.7)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.75)
library(dplyr)
df
m <- glm(Response~Sex*Area+Age,data=df)
df_p <- cbind(df,p_i = predict(m))
1-2*sqrt(sum((df_p$p_i - mean(df_p$Response))^2)/n)
df$Response <- 0
df[Sex=="Male" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Rural"][,1])[1],1,0.2)
df[Sex=="Male" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Suburban"][,1])[1],1,0.8)
df[Sex=="Male" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Male" & Area=="Urban"][,1])[1],1,0.4)
df[Sex=="Female" & Area=="Rural"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Rural"][,1])[1],1,0.5)
df[Sex=="Female" & Area=="Suburban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Suburban"][,1])[1],1,0.9)
df[Sex=="Female" & Area=="Urban"][,1] <- rbinom(dim(df[Sex=="Female" & Area=="Urban"][,1])[1],1,0.3)
m <- glm(Response~Sex*Area+Age,data=df)
df_p <- cbind(df,p_i = predict(m))
1-2*sqrt(sum((df_p$p_i - mean(df_p$Response))^2)/n)
df_p <- cbind(df,p_i = predict(m),w=1/n)
1-2*sqrt(sum(df_p$w*(df_p$p_i - mean(df_p$Response))^2)/n)
1-2*sqrt(sum((df_p$p_i - mean(df_p$Response))^2)/n)
df_p$w
1-2*sqrt(sum(((df_p$p_i - mean(df_p$Response))^2)*df_p$w)/n)
df_p$w
var(df_p$Response)
sqrt(var(df_p$Response))
(df_p$p_i - mean(df_p$Response))^2
sum((df_p$p_i - mean(df_p$Response))^2)
sum((df_p$p_i - mean(df_p$Response))^2)/(n-1)
sqrt(sum((df_p$Response - mean(df_p$Response))^2)/(n-1))
sqrt(sum(df_p$w((df_p$Response - mean(df_p$Response))^2))/(n-1))
sqrt(sum(df_p$w((df_p$Response - mean(df_p$Response))^2))/(n-1))
sqrt(sum(df_p$w*((df_p$Response - mean(df_p$Response))^2))/(n-1))
sqrt(sum(df_p$w*((df_p$Response - mean(df_p$Response))^2))/(n-1))
sqrt(sum((df_p$Response - mean(df_p$Response))^2)/(n-1))
model.matrix(m)
model.matrix(m)
model.matrix(m) %*% m$coefficients
lin_pred <- model.matrix(m) %*% m$coefficients
exp(lin_pred)/((1+exp(lin_pred))^2)
(exp(lin_pred)/((1+exp(lin_pred))^2))^2 %*% model.matrix(m)
(exp(lin_pred)/((1+exp(lin_pred))^2))^2 %*% t(model.matrix(m))
(exp(lin_pred)/((1+exp(lin_pred))^2))^2
dim(model.matrix(m))
length((exp(lin_pred)/((1+exp(lin_pred))^2))^2)
x <- model.matrix(m)
(exp(lin_pred)/((1+exp(lin_pred))^2))^2 %*% t(t(x))
as.matrix((exp(lin_pred)/((1+exp(lin_pred))^2))^2)
as.matrix((exp(lin_pred)/((1+exp(lin_pred))^2))^2) %*% x
dim(as.matrix((exp(lin_pred)/((1+exp(lin_pred))^2))^2))
matrix((exp(lin_pred)/((1+exp(lin_pred))^2))^2)
t(matrix((exp(lin_pred)/((1+exp(lin_pred))^2))^2)) %*% x
exp(lin_pred)/((1+exp(lin_pred))^2)
dim(x)
t(matrix(exp(lin_pred)/((1+exp(lin_pred))^2) ))
dim(t(matrix(exp(lin_pred)/((1+exp(lin_pred))^2) )))
dim(x)
t(matrix(exp(lin_pred)/((1+exp(lin_pred))^2) ))
dim(x)
t(x) %*% x
dim(t(x) %*% x)
t(x) %*% x
beta <- m$coefficients
x
x[1,]
x[1,] %*% beta
exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2)
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% x[1,]
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% x[1,]
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% (x[1,])
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2)) %*% x[1,]
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2)) %*% x[1,] %*% t(x[1,])
x[1,] %*% t(x[1,])
dim(x[1,] %*% t(x[1,]))
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2)) *( x[1,] %*% t(x[1,]))
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))
( x[1,] %*% t(x[1,]))
as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( x[1,] %*% t(x[1,]))
solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( x[1,] %*% t(x[1,])))
solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( x[1,] %*% t(x[1,])))
as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( x[1,] %*% t(x[1,]))
as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,]))
solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))*solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))
solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))*as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,]))))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% x[1,])*as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,]
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))*as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,]
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))*as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% t(x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))
as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,]
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))
dim((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))  %*% as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,]
as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,]
dim(as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))
dim((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))
t(as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,])
dim((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% t(as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% t(as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,])
as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,]))))
(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,]))))
as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,]))
?apply
apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( t(x) %*% (x))}
apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( t(x) %*% (x))})
apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( t(x) %*% (x))})
apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))})
t(x) %*% beta
t(x[1,]) %*% beta
x[1,] %*% beta
sum(apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))}))
solve(sum(apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))})))
solve(sum(apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))}))
solve(sum(apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))})))
solve(sum(apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))})))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% t(as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,])
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])
S <- solve(sum(apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))})))
S
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]) * as.numeric(S) %*% x[1,]
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% t(as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,])
(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]) * as.numeric(S) %*% t(x[1,])
as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,]))))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) * as.numeric(S) %*% x[1,]
dim(((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])))
dim(x[1,])
x[1,]
dim(matrix(x[1,]))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) * as.numeric(S) %*% matrix(x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% as.numeric(S)* matrix(x[1,])
as.numeric(S)* matrix(x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,]))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% as.numeric(S)* matrix(x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% as.numeric(S)* matrix(x[1,])
s <- as.numeric(S)* matrix(x[1,])
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% s
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% (as.numeric(S)* matrix(x[1,]))
apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(S)* matrix(x))})
sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(S)* matrix(x))}))
sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(S)* matrix(x))}))/n
dim(((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])))
((exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))^2 %*% t(x[1,])) %*% t(as.numeric(solve(as.numeric(exp(x[1,] %*% beta)/((1+exp(x[1,] %*% beta))^2))*( t(x[1,]) %*% (x[1,])))) %*% x[1,])
1-2*sqrt(sum(((df_p$p_i - mean(df_p$Response))^2)*df_p$w)/n)
denom <- solve(sum(apply(x,1,FUN=function(x){as.numeric(exp(x %*% beta)/((1+exp(x %*% beta))^2))*( (x) %*% t(x))})))
sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n
S <- sqrt(sum(((df_p$p_i - mean(df_p$Response))^2)*df_p$w)/n)
S
S-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n
S_2 <- (sum(((df_p$p_i - mean(df_p$Response))^2)*df_p$w)/n)
S_2-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n
(1+1/n+1/500000)*S_2-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n
(1+1/n+1/500000)
sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n
S_2
S_2 <- (sum(((df_p$p_i - mean(df_p$Response))^2))/n)
S_2
(1+1/n+1/500000)*S_2-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n
sqrt((1+1/n+1/500000)*S_2-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n)
sqrt((1)*S_2-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n)
sqrt(S_2-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n)
S_2
sqrt(S_2)
1-2*sqrt(S_2-sum(apply(x,1,FUN=function(x){((exp(x %*% beta)/((1+exp(x %*% beta))^2))^2 %*% t(x)) %*% (as.numeric(denom)* matrix(x))}))/n)
1-2*sqrt(S_2)
